//
//  MessageBubbleView.swift
//  StockChat
//
//  Created by Macbook on 3/3/25.
//

import SwiftUI
import GeminiAI

struct MessageBubbleView: View {
    let message: ChatMessage
    
    var showImageFromClient: Bool = true
    @State private var animatedText: String = ""
    
    var body: some View {
        HStack(alignment: .top) {
            if message.isUser {
                Spacer()
                Spacer()
                VStack {
                    if showImageFromClient {
                        HStack {
                            Spacer()
                            ForEach(message.swiftUIImages, id: \.id) { image in
                                image.image
                                    .resizable()
                                    .frame(width: 100, height: 100)
                            }
                        }
                    }
                    
                    Text(message.content)
                        .font(.caption)
                        .frame(alignment: .trailing)
                }
                .padding(5)
                .background(.ultraThinMaterial, in: RoundedRectangle(cornerRadius: 8, style: .continuous))
            } else {
                if message.content.isEmpty {
                    HStack {
                        Text("Ph√¢n t√≠ch k·ªπ thu·∫≠t v√† c∆° b·∫£n v·ªÅ c·ªï phi·∫øu XYZ (v√≠ d·ª•: VNM, HPG) nh∆∞ th·∫ø n√†o, v√† nh·ªØng y·∫øu t·ªë n√†o cho th·∫•y ti·ªÅm nƒÉng tƒÉng tr∆∞·ªüng d√†i h·∫°n?\", \"Chi·∫øn l∆∞·ª£c ƒëa d·∫°ng h√≥a danh m·ª•c ƒë·∫ßu t∆∞ n√†o ph√π h·ª£p cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu v·ªõi m·ª©c v·ªën [X] tri·ªáu ƒë·ªìng, v√† t·ª∑ l·ªá ph√¢n b·ªï v√†o c√°c lo·∫°i t√†i s·∫£n kh√°c nhau n√™n l√† bao nhi√™u?\", \"R·ªßi ro l·ªõn nh·∫•t khi ƒë·∫ßu t∆∞ v√†o ng√†nh [X]")
                            .font(.caption)
                        //+ Text("... More").font(.caption.bold())
                    }
                    .redacted(reason: .placeholder)
                    
                        
                } else {
                    Text(message.localizedContent)
                        .font(.caption)
                        .padding(5)
                        .background(.ultraThinMaterial.opacity(message.isUser ? 1 : 0), in: RoundedRectangle(cornerRadius: 8, style: .continuous))
                }
                
                Spacer()
                Spacer()
            }
        }
        .foregroundStyle(.white)
        .padding(.leading, message.isUser ? 30 : 0)
        .padding(.trailing, message.isUser ? 0 : 30)
    }
    
    // üî• H√†m t·∫°o hi·ªáu ·ª©ng g√µ ch·ªØ üî•
    private func startTypingEffect() {
        animatedText = ""
        let characters = Array(message.content)
        var index = 0

        Timer.scheduledTimer(withTimeInterval: 0.03, repeats: true) { timer in
            if index < characters.count {
                animatedText.append(characters[index])
                index += 1
            } else {
                timer.invalidate() // D·ª´ng khi ho√†n th√†nh
            }
        }
    }
}
